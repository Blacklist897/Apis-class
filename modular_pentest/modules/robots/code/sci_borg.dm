/*
		SCIENCE MODULES
*/

/obj/item/robot_module/science
	name = "Science"
	basic_modules = list(
		/obj/item/assembly/flash/cyborg,
		/obj/item/borg/apparatus/beaker,
		/obj/item/reagent_containers/dropper,
		/obj/item/reagent_containers/syringe,
		/obj/item/weldingtool/largetank/cyborg,
		/obj/item/borg/cyborg_omnitool/engineering,
		/obj/item/borg/cyborg_omnitool/medical,
		/obj/item/analyzer,
		/obj/item/geiger_counter/cyborg,
		/obj/item/assembly/signaler/cyborg,
		/obj/item/extinguisher,
		/obj/item/pen,
		/obj/item/survey_handheld,
		/obj/item/borg/apparatus/science/,
		/obj/item/stack/cable_coil/cyborg,
		)
	//emag_modules = list(/obj/item/reagent_containers/borghypo/peace/hacked)
	cyborg_base_icon = "omoikane"
	moduleselect_icon = "standard"
	can_be_pushed = FALSE
	hat_offset = -2

/obj/item/robot_module/science/be_transformed_to(obj/item/robot_module/old_module)
	var/mob/living/silicon/robot/R = loc
	var/static/list/sci_icons
	if(!sci_icons)
		sci_icons = list(
			"Omoikane" = image(icon = 'icons/mob/robots.dmi', icon_state = "omoikane"),
			"Sci Droid" = image(icon = 'modular_pentest/modules/robots/icons/mob/science.dmi', icon_state = "droid-science"),
			"Sci Marina" = image(icon = 'modular_pentest/modules/robots/icons/mob/science.dmi', icon_state = "marinaSCI"),
			"Sci Drone" = image(icon = 'modular_pentest/modules/robots/icons/mob/science.dmi', icon_state = "drone-science"),
		)
		sci_icons = sortList(sci_icons)
	var/sci_borg_icon = show_radial_menu(R, R , sci_icons, custom_check = CALLBACK(src, PROC_REF(check_menu), R), radius = 42, require_near = TRUE)
	switch(sci_borg_icon)
		if("Omoikane")
			cyborg_base_icon = "omoikane"
		if("Sci Droid")
			cyborg_base_icon = "droid-science"
			cyborg_icon_override = 'modular_pentest/modules/robots/icons/mob/science.dmi'
			special_light_key = "droid-science"
		if("Sci Marina")
			cyborg_base_icon = "marinaSCI"
			cyborg_icon_override = 'modular_pentest/modules/robots/icons/mob/science.dmi'
			special_light_key = "marinaSCI"
		if("Sci Drone")
			cyborg_base_icon = "drone-science"
			cyborg_icon_override = 'modular_pentest/modules/robots/icons/mob/science.dmi'
			special_light_key = "drpone-science"
		else
			return FALSE
	return ..()

//
// SCIENCE APPARATUS - CODE
//

/obj/item/borg/apparatus/science
	name = "science apparatus"
	desc = "A special apparatus for carrying paper, research notes, slime cores, strange relics and assembling mechs."
	icon = 'modular_pentest/modules/robots/icons/obj/borg_tools.dmi'
	icon_state = "borg_service_apparatus"
	storable = list(
		/obj/item/paper,
		/obj/item/research_notes,
		/obj/item/slime_extract,
		/obj/item/relic,
		/obj/item/assembly/signaler/anomaly,
		/obj/item/circuitboard/mecha,
		/obj/item/mecha_parts,
	)

/obj/item/borg/apparatus/science/Initialize(mapload)
	update_appearance()
	return ..()

/obj/item/borg/apparatus/science/update_overlays()
	. = ..()
	var/mutable_appearance/arm = mutable_appearance(icon, "borg_hardware_apparatus_arm1")
	if(stored)
		COMPILE_OVERLAYS(stored)
		stored.pixel_x = -3
		stored.pixel_y = 0
		if((!istype(stored, /obj/item/food)))
			arm.icon_state = "borg_hardware_apparatus_arm2"
		var/mutable_appearance/stored_copy = new /mutable_appearance(stored)
		stored_copy.layer = FLOAT_LAYER
		stored_copy.plane = FLOAT_PLANE
		. += stored_copy
	. += arm

/obj/item/borg/apparatus/science/examine()
	. = ..()
	if(stored)
		. += "The apparatus currently has [stored] secured."
		. += span_notice("<i>Alt-click</i> will drop the currently secured item.")

//
// SURVEY SCANNER UPGRADE - BOARD AND UPGRADE CODE
//

/obj/item/borg/upgrade/surveyscanner
	name = "science cyborg elite survey scanner"
	desc = "An elite survey scanner replacement for the science module's standard scanner."
	icon_state = "module_science"
	require_model = TRUE
	model_type = list(/obj/item/robot_module/science)

	items_to_add = list(/obj/item/survey_handheld/elite)
	items_to_remove = list(/obj/item/survey_handheld)

//
// SURVEY SCANNER UPGRADE DESIGN - mechfabricator_designs.dm
//

/datum/design/borg_upgrade_surveyscanner
	name = "Survey Scanner"
	id = "borg_upgrade_survey_scanner"
	build_type = MECHFAB
	build_path = /obj/item/borg/upgrade/surveyscanner
	materials = list(
		/datum/material/iron = 5000,
		/datum/material/silver = 5000,
		/datum/material/gold = 3000,
		/datum/material/uranium = 3000,
		/datum/material/diamond = 2000,
	)
	construction_time = 90
	category = list("Cyborg Upgrade Modules")
